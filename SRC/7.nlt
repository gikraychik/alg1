# обработка кнопок
# TMP31 передается в следующее состояние

INCLUDE(regs.inc)

MOVE(VIDEO_MODE, TMP0)					# TMP0 = VIDEO_MODE
MOVE(BTN_ENTR_STATUS, TMP1)				# TMP1 = BTN_ENTR_STATUS
MOVE(BTN_UP, TMP2)						# TMP2 = BTN_UP
MOVE(BTN_DOWN, TMP3)					# TMP3 = BTN_DOWN
NOT(TMP1, TMP9)							# TMP9 = !BTN_ENTR_STATUS
MOVE(TMP0, TMP11)						# TMP11 = VIDEO_MODE (доп. ячейка для VIDEO_MODE)
MOVE(T3, TMP31)							# TMP31 = T3

# TMP4 - TMP7 являются константами. Созданы для сокращения объема кода
IMOVE(0, TMP4)
IMOVE(1, TMP5)
IMOVE(2, TMP6)
IMOVE(3, TMP7)

# если нажаты up and down одновременно, не регистрируем нажатие
AND(BTN_UP_STATUS, BTN_DOWN_STATUS, TMP8)
MUX2(TMP8, TMP2, TMP2, TMP4)			# if (tmp8) { tmp2 = 0; }
MUX2(TMP8, TMP3, TMP3, TMP4)			# if (tmp8) { tmp3 = 0; }

IEQ(0, TMP0, TMP8)						# TMP8 = (VIDEO_MODE == 0)
AND(TMP8, TMP9, TMP10)					# TMP10 = (VIDEO_MODE == 0) && 	!BTN_ENTR_STATUS
AND(TMP10, TMP3, TMP12)					# TMP12 = (VIDEO_MODE == 0) && 	!BTN_ENTR_STATUS && BTN_DOWN
MUX2(TMP12, TMP11, TMP11, TMP4)			# if (tmp12) { tmp11 = 0; }
AND(TMP10, TMP2, TMP12)					# TMP12 = (VIDEO_MODE == 0) && 	!BTN_ENTR_STATUS && BTN_UP
MUX2(TMP12, TMP11, TMP11, TMP6)			# if (tmp12) { tmp11 = 2; }
EQ(TMP0, TMP11, TMP12)					# TMP12 = (TMP0 == TMP11)
MOVE(TMP11, TMP0)						# VIDEO_MODE = TMP11
MUX2(TMP12, TMP2, TMP4, TMP2)			# if (TMP0 != TMP11) { tmp2 = 0; }
MUX2(TMP12, TMP3, TMP4, TMP3)			# if (TMP0 != TMP11) { tmp3 = 0; }

IEQ(1, TMP0, TMP8)						# TMP8 = (VIDEO_MODE == 1)
ND(TMP8, TMP9, TMP10)					# TMP10 = (VIDEO_MODE == 1) && 	!BTN_ENTR_STATUS
AND(TMP10, TMP3, TMP12)					# TMP12 = (VIDEO_MODE == 1) && 	!BTN_ENTR_STATUS && BTN_DOWN
MUX2(TMP12, TMP11, TMP11, TMP6)			# if (tmp12) { tmp11 = 2; }
AND(TMP10, TMP2, TMP12)					# TMP12 = (VIDEO_MODE == 1) && 	!BTN_ENTR_STATUS && BTN_UP
MUX2(TMP12, TMP11, TMP11, TMP5)			# if (tmp12) { tmp11 = 1; }
EQ(TMP0, TMP11, TMP12)					# TMP12 = (TMP0 == TMP11)
MOVE(TMP11, TMP0)						# VIDEO_MODE = TMP11
MUX2(TMP12, TMP2, TMP4, TMP2)			# if (TMP0 != TMP11) { tmp2 = 0; }
MUX2(TMP12, TMP3, TMP4, TMP3)			# if (TMP0 != TMP11) { tmp3 = 0; }

IEQ(2, TMP0, TMP8)						# TMP8 = (VIDEO_MODE == 2)
AND(TMP8, TMP1, TMP10)					# TMP10 = (VIDEO_MODE == 2) && BTN_ENTR_STATUS
MUX2(TMP10, TMP11, TMP11, TMP7)			# if (tmp1) { tmp11 = 3; }
AND(TMP8, TMP9, TMP10)					# TMP10 = (VIDEO_MODE == 2) && !BTN_ENTR_STATUS
AND(TMP10, TMP3, TMP12)					# TMP12 = (VIDEO_MODE == 2) && !BTN_ENTR_STATUS && BTN_DOWN
MUX2(TMP12, TMP11, TMP11, TMP5)			# if (tmp12) { tmp11 = 1; }
NOT(TMP3, TMP12)						# TMP12 = !BTN_DOWN
AND(TMP10, TMP12, TMP12)				# TMP12 = (VIDEO_MODE == 2) && !BTN_ENTR_STATUS && !BTN_DOWN
AND(TMP12, TMP2, TMP13)					# TMP13 = (VIDEO_MODE == 2) && !BTN_ENTR_STATUS && !BTN_DOWN && BTN_UP
MUX2(TMP13, TMP11, TMP11, TMP4)			# if (tmp13) { tmp11 = 0; }
EQ(TMP0, TMP11, TMP13)					# TMP13 = (TMP0 == TMP11)
MOVE(TMP11, TMP0)						# VIDEO_MODE = TMP11
MUX2(TMP13, TMP2, TMP4, TMP2)			# if (TMP0 != TMP11) { tmp2 = 0; }
MUX2(TMP13, TMP3, TMP4, TMP3)			# if (TMP0 != TMP11) { tmp3 = 0; }

IEQ(3, TMP0, TMP8)						# TMP8 = (VIDEO_MODE == 3)
AND(TMP8, TMP9, TMP10)					# TMP10 = (VIDEO_MODE == 3) && !BTN_ENTR_STATUS
MUX2(TMP10, TMP11, TMP11, TMP6)			# if (tmp10) { tmp11 = 2; }
AND(TMP8, TMP1, TMP10)					# TMP10 = (VIDEO_MODE == 3) && BTN_ENTR_STATUS
NOT(TMP2, TMP12)						# TMP12 = !BTN_UP
AND(TMP10, TMP12, TMP13)				# TMP13 = (VIDEO_MODE == 3) && BTN_ENTR_STATUS && !BTN_UP
AND(TMP13, TMP3, TMP14)					# TMP14 = (VIDEO_MODE == 3) && BTN_ENTR_STATUS && !BTN_UP && BTN_DOWN)
SUB(TMP31, TMP4, TMP15)					# TMP15 = TMP31 - 1
IMOVE(20, TMP16)						# TMP16 = 20
GE(TMP15, TMP16, TMP17)					# TMP17 = (TMP31 - 1 >= 20)
MUX2(TMP17, TMP31, TMP16, TMP17)		# TMP31 = max(TMP31 - 1, 20)
AND(TMP10, TMP2, TMP12)					# TMP12 = (VIDEO_MODE == 3) && BTN_ENTR_STATUS && BTN_UP
ADD(TMP31, TMP5, TMP13)					# TMP13 = TMP31 + 1
IMOVE(28, TMP14)						# TMP14 = 28
GE(TMP13, TMP14, TMP15)					# TMP15 = (TMP31 + 1 >= 28)
MUX2(TMP15, TMP31, TMP13, TMP14)		# TMP31 = min(TMP31 + 1, 28)
EQ(TMP0, TMP11, TMP13)					# TMP13 = (TMP0 == TMP11)
MOVE(TMP11, TMP0)						# VIDEO_MODE = TMP11
MUX2(TMP13, TMP2, TMP4, TMP2)			# if (tmp13) { tmp2 = 0; }
MUX2(TMP13, TMP3, TMP4, TMP3)			# if (tmp13) { tmp3 = 0; }

MOVE(TMP0, VIDEO_MODE)
IMOVE(8, NETLIST_SELECT)

