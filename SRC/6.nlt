# установка реле
# TMP24 = TIMER (1 - установлен, 0 - не установлен)

INCLUDE(regs.inc)

MOVE(T1, TMP0)						# TMP0 = T1 (outside) (Tнар)
MOVE(T2, TMP1)						# TMP1 = T2 (inside) (Tкуп)

IMOVE(60, TMP2)						# TMP2 - 60 seconds
GE(T1_LAST, TMP2, TMP3)				# TMP3 = (T1_LAST >= 60)
GE(T2_LAST, TMP2, TMP4)				# TMP4 = (T2_LAST >= 60)

MOVE(S2, S2_OLD)
MOVE(S3, S3_OLD)
MOVE(S4, S4_OLD)

# стабилизация моментных скачков температуры
IMOVE(24, TMP2)						# TMP2 - температура при ошибке датчика
MUX2(TMP3, TMP0, TMP0, TMP2)		# if (tmp3) { T1 = 24; }
MUX2(TMP3, MEM_T1, MEM_T1, TMP0)	# if (tmp3) { MEM_T1 = T1; }
NOT(TMP3, TMP3)						# TMP3 = (T1_LAST < 60)
IMOVE(0, TMP2)						# TMP2 = 0
IMOVE(40, TMP5)						# TMP5 = 40
SUB(TMP2, TMP5, TMP2)				# TMP2 = -40
GE(TMP0, TMP2, TMP5)				# TMP5 = (T1 >= -40)
IMOVE(50, TMP2)						# TMP2 = 50
LE(TMP0, TMP2, TMP2)				# TMP2 = (T1 <= 50)
AND(TMP5, TMP2, TMP5)				# TMP5 = (T1 >= -40) && (T1 <= 50)
AND(TMP3, TMP5, TMP6)				# TMP6 = (T1_LAST < 60) && (T1 >= -40) && (T1 <= 50)
MUX2(TMP6, MEM_T1, MEM_T1, TMP0)	# if (tmp6) { MEM_T1 = T1; }
NOT(TMP5, TMP5)						# TMP5 = !((T1 >= -40) && (T1 <= 50))
AND(TMP3, TMP5, TMP6)				# TMP6 = (T1_LAST < 60) && !((T1 >= -40) && (T1 <= 50))
MUX2(TMP6, TMP0, TMP0, MEM_T1)		# if (tmp6) { T1 = MEM_T1; }
NOT(TMP3, TMP3)						# TMP3 = (T1_LAST >= 60)

IMOVE(24, TMP2)						# TMP2 - температура при ошибке датчика
MUX2(TMP4, TMP1, TMP1, TMP2)		# if (tmp4) { T2 = 24; }
MUX2(TMP4, MEM_T2, MEM_T2, TMP1)	# if (tmp4) { MEM_T2 = T2; }
NOT(TMP4, TMP4)						# TMP4 = (T2_LAST < 60)
IMOVE(0, TMP2)						# TMP2 = 0
IMOVE(40, TMP5)						# TMP5 = 40
SUB(TMP2, TMP5, TMP2)				# TMP2 = -40
GE(TMP1, TMP2, TMP5)				# TMP5 = (T2 >= -40)
IMOVE(50, TMP2)						# TMP2 = 50
LE(TMP1, TMP2, TMP2)				# TMP2 = (T2 <= 50)
AND(TMP5, TMP2, TMP5)				# TMP5 = (T2 >= -40) && (T2 <= 50)
AND(TMP4, TMP5, TMP6)				# TMP6 = (T2_LAST < 60) && (T2 >= -40) && (T2 <= 50)
MUX2(TMP6, MEM_T2, MEM_T2, TMP1)	# if (tmp6) { MEM_T2 = T2; }
NOT(TMP5, TMP5)						# TMP5 = !((T2 >= -40) && (T2 <= 50))
AND(TMP4, TMP5, TMP6)				# TMP6 = (T2_LAST < 60) && !((T2 >= -40) && (T2 <= 50))
MUX2(TMP6, TMP1, TMP1, MEM_T2)		# if (tmp6) { T2 = MEM_T2; }
NOT(TMP4, TMP4)						# TMP4 = (T4_LAST >= 60)
# конец стабилизации

MOVE(T3, TMP2)						# TMP2 = T3 - желаемая температура в салоне (Tуст)

# охлаждение ПКА
IMOVE(15, TMP3)						# TMP3 = 15
GE(TMP0, TMP3, TMP3)				# TMP3 = (Tнар >= 15)

IMOVE(1, TMP4)						# TMP4 = 1
ADD(TMP2, TMP4, TMP4)				# TMP4 = Tуст + 1
GE(TMP1, TMP4, TMP4)				# TMP4 = (Tкуп >= Tуст + 1)
AND(TMP3, TMP4, TMP4)				# TMP4 = (Tнар >= 15) && (Tкуп >= Tуст + 1)

LE(TMP1, TMP2, TMP5)				# TMP5 = (Tкуп <= Tуст)
NOT(TMP3, TMP3)						# TMP3 = (Tнар < 15)
OR(TMP5, TMP3, TMP5)				# TMP5 = (Tкуп <= Tуст) || (Tнар < 15)
AND(TMP5, S2_OLD, TMP5)				# TMP5 = ((Tкуп <= Tуст) || (Tнар < 15)) && (S2_OLD == 1)
NOT(S3_OLD, TMP3)					# TMP3 = (S3_OLD == 0)
AND(TMP5, TMP3, TMP5)				# TMP5 = ((Tкуп <= Tуст) || (Tнар < 15)) && (S2_OLD == 1) && (S3_OLD == 0)
IMOVE(0, TMP6)						# TMP6 = 0
MUX2(TMP5, S2_OLD, S2_OLD, TMP6)	# if (tmp5) { S2_OLD = 0; } выключение реле 2
NOT(S4_OLD, TMP6)					# TMP6 = (S4_OLD == 0)
AND(TMP5, TMP6, TMP5)				# TMP5 = ((Tкуп <= Tуст) || (Tнар < 15)) && (S2_OLD == 1) && (S3_OLD == 0) && (S4_OLD == 0)
IMOVE(0, TMP6)						# TMP6 = 0
MUX2(TMP5, IND4, IND4, TMP6)		# if (tmp5) { IND4 = 0; } выключение индикатора 4

NOT(TIMER, TMP6)					# TMP6 = !TIMER
AND(TMP4, TMP6, TMP6)				# TMP6 = (Tнар >= 15) && (Tкуп >= Tуст + 1) && !TIMER
NOT(S2_OLD, TMP7)					# TMP7 = (S2_OLD == 0)
AND(TMP6, TMP7, TMP6)				# TMP6 = (Tнар >= 15) && (Tкуп >= Tуст + 1) && !TIMER && (S2_OLD == 0)
IMOVE(1, TMP7)						# TMP7 = 1
MUX2(TMP6, TIMER, TIMER, TMP7)		# если выполнено TMP6, TIMER = 1; else TIMER = TIMER
IMOVE(30000, TMP7)					# TMP7 = 120 seconds
MUX2(TMP6, TIMER_MSEC, TIMER_MSEC, TMP7)	# если выполнено TMP6, TIMER_MSEC = 120 seconds; else TIMER_MSEC = TIMER_MSEC

AND(TMP4, TIMER, TMP6)				# TMP6 = TMP4 && TIMER
IEQ(0, TIMER_MSEC, TMP7)			# TMP7 = (TIMER_MSEC == 0)

AND(TMP6, TMP7, TMP8)				# TMP8 = TMP6 && (TIMER_MSEC == 0)
IMOVE(1, TMP5)						# TMP5 = 1
MUX2(TMP8, S2_OLD, S2_OLD, TMP5)	# if (tmp8) { S2_OLD = 1; } включение реле 2
MUX2(TMP8, IND4, IND4, TMP5)		# if (tmp8) { IND4 = 1; } включение индикатора 4
IMOVE(0, TMP5)						# TMP5 = 0
MUX2(TMP8, TIMER, TIMER, TMP5)		# if (tmp8) { TIMER = 0; } выключение таймера

# нагрев ПКА
IMOVE(5, TMP3)						# TMP3 = 5
IMOVE(0, TMP4)						# TMP4 = 0
SUB(TMP4, TMP3, TMP3)				# TMP3 = -5
IMOVE(20, TMP4)						# TMP4 = 20
LE(TMP3, TMP0, TMP3)				# TMP3 = (-5 <= Tнар)
LT(TMP0, TMP4, TMP4)				# TMP4 = (Tнар < 20)
AND(TMP3, TMP4, TMP3)				# TMP3 = (-5 <= Tнар) && (Tнар < 20)
IMOVE(1, TMP4)						# TMP4 = 1
SUB(TMP2, TMP4, TMP4)				# TMP4 = Tуст - 1
LT(TMP1, TMP4, TMP4)				# TMP4 = (Tкуп < Tуст - 1)
AND(TMP3, TMP4, TMP4)				# TMP4 = (-5 <= Tнар) && (Tнар < 20) && (Tкуп < Tуст - 1)

IMOVE(1, TMP5)						# TMP5 = 1
AND(TMP4, S2_OLD, TMP6)				# TMP6 = TMP4 && (S2_OLD == 1)
MUX2(TMP6, S3_OLD, S3_OLD, TMP5)	# if (TMP6) { S3_OLD = 1; } включение реле 3 (реле 2 уже работает)
MUX2(TMP6, IND5, IND5, TMP5)		# if (TMP6) { IND5 = 1; } включение индикатора 5
IMOVE(0, TMP5)						# TMP5 = 0
MUX2(TMP6, TIMER, TIMER, TMP5)		# if (TMP6) { TIMER = 0; }

NOT(S2_OLD, TMP5)					# TMP5 = (S2_OLD == 0)
AND(TMP4, TMP5, TMP6)				# TMP6 = TMP4 && (S2_OLD == 0)

NOT(TIMER, TMP5)					# TMP5 = !TIMER
AND(TMP6, TMP5, TMP7)				# TMP7 = TMP4 && (S2_OLD == 0) && (!TIMER)
NOT(S3_OLD, TMP5)					# TMP5 = (S3_OLD == 0)
AND(TMP7, TMP5, TMP7)				# TMP7 = TMP4 && (S2_OLD == 0) && (!TIMER) && (S3_OLD == 0)
IMOVE(1, TMP5)						# TMP5 = 1
MUX2(TMP7, TIMER, TIMER, TMP5)		# if (TMP7) { timer = 1; } перезапуск таймера
IMOVE(30000, TMP5)					# TMP5 = 120 seconds
MUX2(TMP7, TIMER_MSEC, TIMER_MSEC, TMP5)	# if (TMP7) { TIMER_MSEC = 120 seconds; } перезапуск таймера

AND(TMP6, TIMER, TMP6)				# TMP6 = TMP6 && TIMER
IEQ(0, TIMER_MSEC, TMP5)			# TMP5 = (TIMER_MSEC == 0)
AND(TMP6, TMP5, TMP6)				# TMP6 = TMP6 && (TIMER_MSEC == 0)
IMOVE(1, TMP5)						# TMP5 = 1
MUX2(TMP6, S2_OLD, S2_OLD, TMP5)	# if (TMP6) { S2_OLD = 1; }
MUX2(TMP6, S3_OLD, S3_OLD, TMP5)	# if (TMP6) { S3_OLD = 1; }
MUX2(TMP6, IND5, IND5, TMP5)		# if (TMP6) { ind5 = 1; }
IMOVE(0, TMP5)						# TMP5 = 0
MUX2(TMP6, TIMER, TIMER, TMP5)		# if (TMP6) { TIMER = 0; }

GE(TMP1, TMP2, TMP3)				# TMP3 = (Tкуп >= Tуст)
IMOVE(0, TMP4)						# TMP4 = 0
IMOVE(5, TMP5)						# TMP5 = 5
SUB(TMP4, TMP5, TMP4)				# TMP4 = -5
LT(TMP0, TMP4, TMP4)				# TMP4 = (Tнар < -5)
OR(TMP3, TMP4, TMP3)				# TMP3 = (Tкуп >= Tуст) || (Tнар < -5)
IMOVE(20, TMP4)						# TMP4 = 20
GE(TMP0, TMP4, TMP4)				# TMP4 = (Tнар >= 20)
OR(TMP3, TMP4, TMP4)				# TMP4 = (Tкуп >= Tуст) || (Tнар < -5) || (Tнар >= 20)
AND(TMP4, S3_OLD, TMP4)				# TMP4 = ((Tкуп >= Tуст) || (Tнар < -5) || (Tнар >= 20)) && (S3_OLD == 1)

IMOVE(0, TMP3)						# TMP3 = 0
MUX2(TMP4, S2_OLD, S2_OLD, TMP3)	# if (TMP4) { S2_OLD = 0; }
MUX2(TMP4, S3_OLD, S3_OLD, TMP3)	# if (TMP4) { S3_OLD = 0; }
MUX2(TMP4, IND5, IND5, TMP3)		# if (TMP4) { ind5 = 0; }

# охлаждение ИА
IMOVE(18, TMP3)						# TMP3 = 18
GE(TMP0, TMP3, TMP3)				# TMP3 = (Tнар >= 18)
IMOVE(1, TMP4)						# TMP4 = 1
ADD(TMP2, TMP4, TMP4)				# TMP4 = Tуст + 1
GE(TMP1, TMP4, TMP4)				# TMP4 = (Tкуп >= Tуст + 1)
AND(TMP3, TMP4, TMP4)				# TMP4 = (Tнар >= 18) && (Tкуп >= Tуст + 1)

IMOVE(1, TMP5)						# TMP5 = 1
MUX2(TMP4, S4_OLD, S4_OLD, TMP5)	# if (TMP4) { S4_OLD = 1; }
MUX2(TMP4, IND4, IND4, TMP5)		# if (TMP4) { ind4 = 1; }

IMOVE(1, TMP3)						# TMP3 = 1
SUB(TMP2, TMP3, TMP3)				# TMP3 = Tуст - 1
LE(TMP1, TMP3, TMP4)				# TMP4 = (Tкуп <= Tуст - 1)
IMOVE(18, TMP3)						# TMP3 = 18
LT(TMP0, TMP3, TMP3)				# TMP3 = (Tнар < 18)
OR(TMP4, TMP3, TMP4)				# TMP4 = (Tкуп <= Tуст - 1) || (Tнар < 18)
AND(TMP4, S4_OLD, TMP4)				# TMP4 = ((Tкуп <= Tуст - 1) || (Tнар < 18)) && (S4_OLD == 1)
IMOVE(0, TMP5)						# TMP5 = 0
MUX2(TMP4, S4_OLD, S4_OLD, TMP5)	# if (TMP4) { S4_OLD = 0; }
NOT(S2_OLD, TMP3)					# TMP3 = (S2_OLD == 0)
AND(TMP4, TMP3, TMP4)				# TMP4 = ((Tкуп <= Tуст - 1) || (Tнар < 18)) && (S4_OLD == 1) && (S2_OLD == 0)
MUX2(TMP4, IND4, IND4, TMP5)		# if (TMP4) { ind4 = 0; }

# TMP3 - аналоговый выход
IMOVE(38, TMP4)						# TMP4 = 38
GE(TMP0, TMP4, TMP5)				# TMP5 = (Tнар >= 38)
IMOVE(4, TMP4)						# TMP4 = 4
MUX2(TMP5, TMP3, TMP3, TMP4)		# if (Tнар >= 38) { TMP3 = 4; }

IMOVE(36, TMP4)						# TMP4 = 36
GE(TMP0, TMP4, TMP5)				# TMP5 = (Tнар >= 36)
IMOVE(38, TMP4)						# TMP4 = 38
LT(TMP0, TMP4, TMP6)				# TMP6 = (Tнар < 38)
AND(TMP5, TMP6, TMP5)				# TMP5 = (Tнар >= 36) && (Tнар < 38)
IMOVE(5, TMP4)						# TMP4 = 5
MUX2(TMP5, TMP3, TMP3, TMP4)		# if ((Tнар >= 36) && (Tнар < 38)) { TMP3 = 5; }

IMOVE(34, TMP4)						# TMP4 = 34
GE(TMP0, TMP4, TMP5)				# TMP5 = (Tнар >= 34)
IMOVE(36, TMP4)						# TMP4 = 36
LT(TMP0, TMP4, TMP6)				# TMP6 = (Tнар < 36)
AND(TMP5, TMP6, TMP5)				# TMP5 = (Tнар >= 34) && (Tнар < 36)
IMOVE(6, TMP4)						# TMP4 = 6
MUX2(TMP5, TMP3, TMP3, TMP4)		# if ((Tнар >= 34) && (Tнар < 36)) { TMP3 = 6; }

IMOVE(32, TMP4)						# TMP4 = 32
GE(TMP0, TMP4, TMP5)				# TMP5 = (Tнар >= 32)
IMOVE(34, TMP4)						# TMP4 = 34
LT(TMP0, TMP4, TMP6)				# TMP6 = (Tнар < 34)
AND(TMP5, TMP6, TMP5)				# TMP5 = (Tнар >= 32) && (Tнар < 34)
IMOVE(7, TMP4)						# TMP4 = 7
MUX2(TMP5, TMP3, TMP3, TMP4)		# if ((Tнар >= 32) && (Tнар < 34)) { TMP3 = 7; }

IMOVE(30, TMP4)						# TMP4 = 30
GE(TMP0, TMP4, TMP5)				# TMP5 = (Tнар >= 30)
IMOVE(32, TMP4)						# TMP4 = 32
LT(TMP0, TMP4, TMP6)				# TMP6 = (Tнар < 32)
AND(TMP5, TMP6, TMP5)				# TMP5 = (Tнар >= 30) && (Tнар < 32)
IMOVE(8, TMP4)						# TMP4 = 8
MUX2(TMP5, TMP3, TMP3, TMP4)		# if ((Tнар >= 30) && (Tнар < 32)) { TMP3 = 8; }

IMOVE(20, TMP4)						# TMP4 = 20
GE(TMP0, TMP4, TMP5)				# TMP5 = (Tнар >= 30)
IMOVE(30, TMP4)						# TMP4 = 30
LT(TMP0, TMP4, TMP6)				# TMP6 = (Tнар < 30)
AND(TMP5, TMP6, TMP5)				# TMP5 = (Tнар >= 20) && (Tнар < 30)
IMOVE(9, TMP4)						# TMP4 = 9
MUX2(TMP5, TMP3, TMP3, TMP4)		# if ((Tнар >= 20) && (Tнар < 30)) { TMP3 = 9; }

IMOVE(20, TMP4)						# TMP4 = 20
LT(TMP0, TMP4, TMP4)				# TMP4 = (Tнар < 20)
IMOVE(10, TMP5)						# TMP5 = 10
MUX2(TMP4, TMP3, TMP3, TMP5)		# if (Tнар < 20) { TMP3 = 10; }

MOVE(TMP3, PWM_PERCENT)				# PWM_PERCENT = TMP3

MOVE(S2_OLD, S2)
MOVE(S3_OLD, S3)
MOVE(S4_OLD, S4)

IMOVE(7, NETLIST_SELECT)