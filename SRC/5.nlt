# отрисовка экрана
# TMP24 - переменная для констант
INCLUDE(regs.inc)

MOVE(T1, TMP15)						# TMP15 = T1; outside
MOVE(T2, TMP16)						# TMP16 = T2; inside

IEQ(0, VIDEO_MODE, TMP0)			# TMP0 = (video_mode == 0)
IEQ(1, VIDEO_MODE, TMP1)			# TMP1 = (video_mode == 1)
IEQ(2, VIDEO_MODE, TMP2)			# TMP2 = (video_mode == 2)
IEQ(3, VIDEO_MODE, TMP3)			# TMP3 = (video_mode == 3)

IMOVE(60, TMP4)						# 60 seconds

GE(T1_LAST, TMP4, TMP5)				# TMP5 = (T1_LAST >= 60)
GE(T2_LAST, TMP4, TMP6)				# TMP6 = (T2_LAST >= 60)

NOT(TMP5, TMP7)						# TMP7 = !TMP5 <=> TMP7 = (T1_LAST < 60)
NOT(TMP6, TMP8)						# TMP8 = !TMP6 <=> TMP8 = (T2_LAST < 60)

AND(TMP0, TMP6, TMP9)				# TMP9 = (video_mode == 0) && (T2_LAST >= 60); error inside
AND(TMP1, TMP5, TMP10)				# TMP10 = (video_mode == 1) && (T1_LAST >= 60); error outside

IMOVE(0, TMP24)						# TMP24 = 0
# TMP11 - первый символ экрана LED0
MUX2(TMP0, TMP11, TMP11, TMP24)		# if (VIDEO_MODE == 0) { TMP11 = ''; }
IMOVE(0x76, TMP24)					# TMP24 = 0x76 'У'
MUX2(TMP1, TMP11, TMP11, TMP24)		# if (VIDEO_MODE == 1) { TMP11 = 'У'; }
IMOVE(0xEC, TMP24)					# TMP24 = 0xEC 'П'
MUX2(TMP2, TMP11, TMP11, TMP24)		# if (VIDEO_MODE == 2) { TMP11 = 'П'; }
MUX2(TMP3, TMP11, TMP11, TMP24)		# if (VIDEO_MODE == 3) { TMP11 = 'П'; }

OR(TMP9, TMP10, TMP12)				# TMP12 - if error accured

IMOVE(0, TMP24)						# TMP24 = 0
MUX2(TMP12, TMP11, TMP11, TMP24)	# if (tmp12) { tmp11 = ''; }

AND(TMP0, TMP8, TMP13)				# TMP13 = (video_mode == 0) && (T2_LAST < 60)
AND(TMP1, TMP7, TMP14)				# TMP14 = (video_mode == 1) && (T1_LAST < 60)

# TMP17 - выводимая температура
IMOVE(70, TMP24)					# TMP24 = 70
MUX2(TMP13, TMP17, TMP24, TMP16)	# if (tmp13) { tmp17 = t2; } else { tmp17 = 70; }
MUX2(TMP14, TMP17, TMP17, TMP15)	# if (tmp14) { tmp17 = t1; }
MUX2(TMP2, TMP17, TMP17, T3)		# if (video_mode == 2) { tmp17 = t3; }
MUX2(TMP3, TMP17, TMP17, TMP25)		# if (video_mode == 3) { tmp17 = tmp25; }

CD(TMP17, TMP0)						# TMP0 - LED1, TMP1 - LED2, TMP2 - LED3

IMOVE(0x9E, TMP24)					# TMP24 = 0x9E 'E'
MUX2(TMP12, TMP0, TMP0, TMP24)		# if (tmp12) { tmp18 = 'E' }
IMOVE(0xA, TMP24)					# TMP24 = 0xA
MUX2(TMP12, TMP1, TMP1, TMP24)		# 'r'
MUX2(TMP12, TMP2, TMP2, TMP24)		# 'r' 

MOVE(TMP11, LED0)
MOVE(TMP0, LED1)
MOVE(TMP1, LED2)
MOVE(TMP2, LED3)

IMOVE(6, NETLIST_SELECT)